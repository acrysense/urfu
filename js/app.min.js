document.addEventListener('DOMContentLoaded', function () {
    // height 100vh fix for IOS
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);

    // inputmask
    Inputmask().mask(document.querySelectorAll('input'))

    // textarea
    document.querySelectorAll('textarea').forEach(el => {
        el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
        el.classList.add('auto');
        el.addEventListener('input', e => {
            el.style.height = 'auto';
            el.style.height = (el.scrollHeight) + 'px';
        });
    });

    // aos animations
    AOS.init({
        duration: 700,
        once: true,
    })

    // filter choice
    const filterChoice = document.querySelectorAll('.c-dropdown__checkbox')

    if (filterChoice) {
        filterChoice.forEach((item) => {
            item.addEventListener('click', () => {
                setTimeout(() => {
                    AOS.refreshHard()
                }, 500)
            })
        })
    }

    // smooth scroll
    function currentYPosition() {
        // Firefox, Chrome, Opera, Safari
        if (self.pageYOffset) return self.pageYOffset;

        // Internet Explorer 6 - standards mode
        if (document.documentElement && document.documentElement.scrollTop)
            return document.documentElement.scrollTop;
        
        // Internet Explorer 6, 7 and 8
        if (document.body.scrollTop) return document.body.scrollTop;

        return 0;
    } 
    
    function elmYPosition(eID) {
        let elm = document.getElementById(eID);
        let y = elm.offsetTop;
        let node = elm;
        while (node.offsetParent && node.offsetParent != document.body) {
            node = node.offsetParent;
            y += node.offsetTop;
        } return y;
    }
    
    function smoothScroll(eID) {
        let startY = currentYPosition();
        let stopY = elmYPosition(eID);
        let distance = stopY > startY ? stopY - startY : startY - stopY;
        if (distance < 100) {
            scrollTo(0, stopY); return;
        }
        let speed = Math.round(distance / 100);
        if (speed >= 20) speed = 20;
        let step = Math.round(distance / 25);
        let leapY = stopY > startY ? startY + step : startY - step;
        let timer = 0;
        if (stopY > startY) {
            for (let i = startY; i < stopY; i += step ) {
                setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);
                leapY += step; if (leapY > stopY) leapY = stopY; timer++;
            } return;
        }
        for (let i = startY; i > stopY; i -= step ) {
            setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);
            leapY -= step; if (leapY < stopY) leapY = stopY; timer++;
        }
    }

    // smooth scroll on all links
    const allLinks = document.querySelectorAll('a[href^="#"]')

    if (allLinks) {
        allLinks.forEach(item => {
            item.addEventListener('click', (event) => {
                event.preventDefault()
        
                if (item.getAttribute('href').length > 1) {
                    smoothScroll(item.getAttribute('href').slice(1))

                    if (mobileMenu.classList.contains('mobile-menu--active')) {
                        mobileMenu.classList.remove('mobile-menu--active')
                        document.body.classList.remove('scroll-disabled')
                    }
                }
            })
        })
    }
    
    // slides up/down/toggle
    let slideUpQna = (target, duration = 400) => {
        target.style.transitionProperty = 'height, margin, padding';
        target.style.transitionDuration = duration + 'ms';
        target.style.height = target.offsetHeight + 'px';
        target.offsetHeight;
        target.style.overflow = 'hidden';
        target.style.height = 0;
        target.style.paddingTop = 0;
        target.style.paddingBottom = 0;
        target.style.marginTop = 0;
        target.style.marginBottom = 0;
        target.previousElementSibling.style.pointerEvents = 'none';
        window.setTimeout(() => {
            target.style.display = 'none';
            target.style.removeProperty('height');
            target.style.removeProperty('padding-top');
            target.style.removeProperty('padding-bottom');
            target.style.removeProperty('margin-top');
            target.style.removeProperty('margin-bottom');
            target.style.removeProperty('overflow');
            target.style.removeProperty('transition-duration');
            target.style.removeProperty('transition-property');
            target.previousElementSibling.style.pointerEvents = 'auto';
        }, duration);
        target.parentNode.classList.remove('is--open');
    }

    let slideDownQna = (target, duration = 400) => {
        target.style.removeProperty('display');
        let display = window.getComputedStyle(target).display;
        if (display === 'none') display = 'block';
        target.style.display = display;
        let height = target.offsetHeight;
        target.style.overflow = 'hidden';
        target.style.height = 0;
        target.style.paddingTop = 0;
        target.style.paddingBottom = 0;
        target.style.marginTop = 0;
        target.style.marginBottom = 0;
        target.offsetHeight;
        target.style.transitionProperty = "height, margin, padding";
        target.style.transitionDuration = duration + 'ms';
        target.style.height = height + 'px';
        target.style.removeProperty('padding-top');
        target.style.removeProperty('padding-bottom');
        target.style.removeProperty('margin-top');
        target.style.removeProperty('margin-bottom');
        target.previousElementSibling.style.pointerEvents = 'none';
        window.setTimeout(() => {
            target.style.removeProperty('height');
            target.style.removeProperty('overflow');
            target.style.removeProperty('transition-duration');
            target.style.removeProperty('transition-property');
            target.previousElementSibling.style.pointerEvents = 'auto';
        }, duration);
        target.parentNode.classList.add('is--open');
    }

    let slideToggleQna = (target, duration = 400) => {
        if (window.getComputedStyle(target).display === 'none') {
            return slideDownQna(target, duration);
        } else {
            return slideUpQna(target, duration);
        }
    }
    
    // accordeon
    const accordeonTrigger = document.querySelectorAll('.c-accordeon__trigger')

    if (accordeonTrigger) {
        accordeonTrigger.forEach(item => {
            item.addEventListener('click', (event) => {
                event.preventDefault()

                if (!item.parentNode.classList.contains('is--open')) {
                    slideDownQna(item.nextElementSibling)
                } else {
                    slideUpQna(item.nextElementSibling)
                }
            })
        })
    }

    // tabs
    const programTabsItems = document.querySelectorAll('.program-tabs__item')

    if (programTabsItems) {
        programTabsItems.forEach((item, i) => {
            item.addEventListener('click', (event) => {
                event.preventDefault()

                const parent = item.closest('.program-tabs')

                if (!item.classList.contains('program-tabs__item--active')) {
                    parent.querySelectorAll('.program-tabs__item').forEach((child) => child.classList.remove('program-tabs__item--active'))
                    parent.querySelectorAll('.program-tabs__wrapper').forEach((child) => child.classList.remove('program-tabs__wrapper--active'))
        
                    item.classList.add('program-tabs__item--active')

                    const el = parent.querySelector('.program-tabs__item--active')
                    const index = [...parent.querySelectorAll('.program-tabs__item')].indexOf(el);
                    
                    parent.querySelectorAll('.program-tabs__wrapper')[index].classList.add('program-tabs__wrapper--active')
                }
            })
        })
    }

    // get max height
    function getMaxElementsHeight(elements) {

        const heights = elements.map(elements => {
            return elements.getBoundingClientRect().height;
        });              
        
        return Math.max.apply(null, heights);
    }

    // mobile menu
    const hamburger = document.getElementById('hamburger-toggle')
    const mobileMenu = document.getElementById('mobile-menu')
    const mobileMenuClose = document.getElementById('mobile-menu-close')

    if (hamburger && mobileMenu) {
        hamburger.addEventListener('click', (event) => {
            event.preventDefault()

            mobileMenu.classList.add('mobile-menu--active')
            document.body.classList.add('scroll-disabled')
        })

        if (mobileMenuClose) {
            mobileMenuClose.addEventListener('click', (event) => {
                event.preventDefault()
    
                mobileMenu.classList.remove('mobile-menu--active')
                document.body.classList.remove('scroll-disabled')
            })
        }
    }

    // dropdown
    const dropdownBtn = document.querySelectorAll('.c-dropdown__btn')
    const dropdownOverlay = document.querySelectorAll('.c-dropdown__overlay')

    if (dropdownBtn) {
        dropdownBtn.forEach((item) => {
            item.addEventListener('click', (event) => {
                event.preventDefault()

                const parent = item.closest('.c-dropdown')

                document.querySelectorAll('.c-dropdown').forEach((child) => child.classList.remove('c-dropdown--active'))

                if (parent.classList.contains('c-dropdown--active')) {
                    parent.classList.remove('c-dropdown--active')
                } else {
                    parent.classList.add('c-dropdown--active')
                }
            })
        })
    }

    if (dropdownOverlay) {
        dropdownOverlay.forEach((item) => {
            item.addEventListener('click', (event) => {
                event.preventDefault()

                const parent = item.closest('.c-dropdown')

                parent.classList.remove('c-dropdown--active')
            })
        })
    }

    // swiper
    const mainSlider = document.querySelector('.main__slider .swiper')
    const mainSlides = [...document.querySelectorAll('.main__slide')]
    const mainSlidesBody = [...document.querySelectorAll('.main__body')]

    if (mainSlider) {
        if (window.innerWidth >= 1024) {
            setTimeout(() => {
                let heightsMainSlides = getMaxElementsHeight(mainSlides)
        
                mainSlides.forEach(item => {
                    item.style.minHeight = heightsMainSlides + 'px'
                })
            }, 100)
        } else {
            setTimeout(() => {
                let heightsMainSlidesBody = getMaxElementsHeight(mainSlidesBody)
        
                mainSlidesBody.forEach(item => {
                    item.style.minHeight = heightsMainSlidesBody + 'px'
                })
            }, 100)
        }

        const myMainSlider = new Swiper(mainSlider, {
            slidesPerView: 1,
            speed: 0,
            loop: true,
            allowTouchMove: false,
            autoplay: {
                delay: 7000,
                disableOnInteraction: false
            },
            navigation: {
                prevEl: '.swiper-button-prev',
                nextEl: '.swiper-button-next',
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
        });
    }

    // resize
    window.addEventListener('resize', () => {
        let vh = window.innerHeight * 0.01;
        
        document.documentElement.style.setProperty('--vh', `${vh}px`);

        if (mainSlider) {
            if (window.innerWidth >= 1024) {
                setTimeout(() => {
                    let heightsMainSlides = getMaxElementsHeight(mainSlides)
            
                    mainSlides.forEach(item => {
                        item.style.minHeight = heightsMainSlides + 'px'
                    })
                }, 100)
            } else {
                setTimeout(() => {
                    let heightsMainSlidesBody = getMaxElementsHeight(mainSlidesBody)
            
                    mainSlidesBody.forEach(item => {
                        item.style.minHeight = heightsMainSlidesBody + 'px'
                    })
                }, 100)
            }
        }
    });
    
    // modal
    const modal = document.querySelectorAll('.modal')
    const modalBtn = document.querySelectorAll('.modal-btn')
    const modalClose = document.querySelectorAll('.modal__close')
    const modalOverlay = document.querySelectorAll('.modal__overlay')
    
    if (modal && modalBtn && modalClose && modalOverlay) {
        // modal btn
        modalBtn.forEach((item, i) => {
            item.addEventListener('click', (event) => {
                event.preventDefault();

                const modalID = item.dataset.id

                document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                document.getElementById(modalID).classList.add('modal--active')
                document.body.classList.add('scroll-disabled')
            });
        });

        // modal close
        modalClose.forEach((item) => {
            item.addEventListener('click', () => {
                document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                document.body.classList.remove('scroll-disabled')
            });
        });

        // modal overlay
        modalOverlay.forEach((item) => {
            item.addEventListener('click', () => {
                document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                document.body.classList.remove('scroll-disabled')
            })
        });
    }

    // info modal
    const infoModal = document.querySelectorAll('.info-modal')
    const infoModalBtn = document.querySelectorAll('.info-modal-btn')
    const infoModalClose = document.querySelectorAll('.info-modal__close')
    const infoModalBack = document.querySelectorAll('.info-modal__back')
    const infoModalMore = document.querySelectorAll('.info-modal__more')
    const infoModalOverlay = document.querySelector('.info-modal-overlay')
    
    if (infoModal && infoModalBtn && infoModalClose && infoModalOverlay) {
        // open btn
        infoModalBtn.forEach((item, i) => {
            item.addEventListener('click', (event) => {
                event.preventDefault();

                const modalID = item.dataset.id
                const wrapperID = item.dataset.section

                document.querySelectorAll('.info-modal.info-modal--active').forEach((child) => child.classList.remove('info-modal--active'))
                document.getElementById(modalID).classList.add('info-modal--active')
                infoModalOverlay.classList.add('info-modal-overlay--active')
                document.body.classList.add('scroll-disabled')

                if (wrapperID) {
                    const parent = document.querySelector('.info-modal--active')

                    parent.querySelectorAll('.info-modal__wrapper').forEach((child) => child.classList.remove('info-modal__wrapper--active'))
                    document.getElementById(wrapperID).classList.add('info-modal__wrapper--active')
                    parent.querySelector('.info-modal__back').classList.remove('hidden')
                    parent.querySelector('.info-modal__top').scrollIntoView({block: "start"});
                }
            });
        });

        // close
        infoModalClose.forEach((item) => {
            item.addEventListener('click', () => {
                const parent = item.closest('.info-modal')

                document.querySelectorAll('.info-modal.info-modal--active').forEach((child) => child.classList.remove('info-modal--active'))
                infoModalOverlay.classList.remove('info-modal-overlay--active')
                document.body.classList.remove('scroll-disabled')

                setTimeout(() => {
                    parent.querySelectorAll('.info-modal__wrapper').forEach((child) => child.classList.remove('info-modal__wrapper--active'))
                    parent.querySelectorAll('.info-modal__wrapper')[0].classList.add('info-modal__wrapper--active')
                    parent.querySelector('.info-modal__back').classList.add('hidden')
                }, 250)
            });
        });

        // overlay
        infoModalOverlay.addEventListener('click', () => {
            const parent = document.querySelector('.info-modal--active')

            document.querySelectorAll('.info-modal.info-modal--active').forEach((child) => child.classList.remove('info-modal--active'))
            infoModalOverlay.classList.remove('info-modal-overlay--active')
            document.body.classList.remove('scroll-disabled')

            setTimeout(() => {
                parent.querySelectorAll('.info-modal__wrapper').forEach((child) => child.classList.remove('info-modal__wrapper--active'))
                parent.querySelectorAll('.info-modal__wrapper')[0].classList.add('info-modal__wrapper--active')
                parent.querySelector('.info-modal__back').classList.add('hidden')
            }, 250)
        })

        // back
        if (infoModalBack) {
            infoModalBack.forEach((item) => {
                item.addEventListener('click', (event) => {
                    event.preventDefault()

                    const parent = item.closest('.info-modal')

                    parent.querySelectorAll('.info-modal__wrapper').forEach((child) => child.classList.remove('info-modal__wrapper--active'))
                    parent.querySelectorAll('.info-modal__wrapper')[0].classList.add('info-modal__wrapper--active')
                    item.classList.add('hidden')
                })
            })
        }

        if (infoModalMore) {
            infoModalMore.forEach((item) => {
                item.addEventListener('click', (event) => {
                    event.preventDefault()

                    const parent = item.closest('.info-modal')
                    const wrapperID = item.dataset.id

                    parent.querySelectorAll('.info-modal__wrapper').forEach((child) => child.classList.remove('info-modal__wrapper--active'))
                    document.getElementById(wrapperID).classList.add('info-modal__wrapper--active')
                    parent.querySelector('.info-modal__back').classList.remove('hidden')
                    parent.querySelector('.info-modal__top').scrollIntoView({block: "start"});
                })
            })
        }
    }

    // e-mail ajax send
    $("form").submit(function () {
        //Change
        var th = $(this);
        $.ajax({
            type: "POST",
            url: "mail.php",
            data: th.serialize(),
            }).done(function () {
                document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                document.getElementById('modal-success').classList.add('modal--active')
                document.body.classList.add('scroll-disabled')

                setTimeout(function () {
                    // done functions
                    th.trigger("reset");
                    document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                    document.body.classList.remove('scroll-disabled')
                }, 5000);
        });
        return false;
    });
});